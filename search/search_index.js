var __index = {"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"A SIMD Image Manipulation Library","text":"<p>Warning</p> <p>This is a learning project and not yet meant for production use!</p> <p>Apply filters and effects on large amounts of texture data. Uses SIMD features on the device.</p>"},{"location":"index.html#overview","title":"Overview","text":"<p>It is a burdensome to write and maintain portable SIMD code. Code that is hand crafted (either via assembly or intrinsics) for X64 will need to be re-written for ARM. It is a goal to ensure that generated SIMD code targets as many platforms and SIMD variants as possible. Merle uses Intel's Implicit SPMD Program Compiler (ISPC) for this purpose. While it is likely that hand-tuned assembly will beat SIMD generated by tools like ISPC, the goal is to write easily vectorizable code that is portable.</p> <p></p>"},{"location":"build.html","title":"Build","text":""},{"location":"build.html#prerequisites","title":"Prerequisites","text":"<ul> <li><code>cmake</code></li> <li><code>ninja</code>: Optional but common tools assume you have this installed.</li> <li><code>ispc</code></li> <li>A C++ 20 compiler and standard library.</li> </ul>"},{"location":"build.html#platform","title":"Platform","text":"macOSLinux (Debian) <p>Homebrew is recommended on macOS.</p> <pre><code>brew install cmake ninja ispc\n</code></pre> <p>Full instructions to install ISPC for Debian based distributions are here.</p> <p>First, install ISPC from Intel. <pre><code>wget -O- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB | gpg --dearmor | sudo tee /usr/share/keyrings/oneapi-archive-keyring.gpg &gt; /dev/null\necho \"deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] https://apt.repos.intel.com/oneapi all main\" | sudo tee /etc/apt/sources.list.d/oneAPI.list\nsudo apt-get update\nsudo apt-get install intel-oneapi-ispc\n</code></pre></p> <p>Add the following to your <code>.rc</code>. If you don't, you'll need to specify the <code>-DCMAKE_ISPC_COMPILER</code> to point to the path of <code>ispc</code> to when invoking <code>CMake</code>. The default rules in the <code>Makefile</code> won't do this for you!</p> <pre><code>source /opt/intel/oneapi/ispc/latest/env/vars.sh\n</code></pre> <p>Now, install all other dependencies.</p> <pre><code>sudo apt install -y cmake ninja-build build-essential git\n</code></pre>"},{"location":"build.html#run-benchmarks","title":"Run Benchmarks","text":"<p>To build and run all benchmarks,</p> <pre><code>make bench\n</code></pre> <p>Benchmarks use a Google Benchmarks harness at <code>./build/merle_benchmarks</code>.</p>"},{"location":"build.html#run-playgrounds","title":"Run Playgrounds","text":"<p>Playgrounds are interactive demos of the various effects. To build and run all playgrounds, </p> <pre><code>make tests\n</code></pre> <p>This builds and runs the <code>./build/merle_tests</code> binary which is a Google Test harness.</p>"},{"location":"reference.html","title":"Filter Reference","text":""},{"location":"reference.html#color-filters","title":"Color Filters","text":"<p>Color filters manipulate each pixel in isolation.</p>"},{"location":"reference.html#clear","title":"Clear","text":"<p>Clears one or more channels of an existing image with a particular color.</p> Argument Description <code>color</code> The color to use to clear the image. <code>clear_red</code> If the red channel of the image should be cleared. <code>clear_green</code> If the green channel of the image should be cleared. <code>clear_blue</code> If the blue channel of the image should be cleared. <code>clear_alpha</code> If the alpha channel of the image should be cleared. <p></p>"},{"location":"reference.html#grayscale","title":"Grayscale","text":"<p>Converts the RGB channels of an image to grayscale. This filter takes no arguments. </p>"},{"location":"reference.html#invert","title":"Invert","text":"<p>Inverts the RGB channels of an image. This filter takes no arguments. </p>"},{"location":"reference.html#exposure","title":"Exposure","text":"<p>Update the exposure of the image.</p> Argument Description <code>exposure</code> The exposure adjustment to apply. <code>0</code> specifies no change. <code>-2</code> to <code>2</code> is a recommended range to supply. <p></p>"},{"location":"reference.html#brightness","title":"Brightness","text":"<p>Update the brightness of the image.</p> Argument Description <code>brightness</code> The brightness adjustment to apply. <code>0</code> specifies no change. <code>0</code> to <code>1</code> is a recommended range to supply. <p></p>"},{"location":"reference.html#rgba-levels","title":"RGBA Levels","text":"<p>Adjust the levels of the individual channels of the image.</p> Argument Description <code>red</code> The adjust to the red channel of the image. <code>1</code> specifies no change. <code>0</code> to <code>1</code> is a recommended range to supply. <code>green</code> The adjust to the green channel of the image. <code>1</code> specifies no change. <code>0</code> to <code>1</code> is a recommended range to supply. <code>blue</code> The adjust to the blue channel of the image. <code>1</code> specifies no change. <code>0</code> to <code>1</code> is a recommended range to supply. <code>alpha</code> The adjust to the alpha channel of the image. <code>1</code> specifies no change. <code>0</code> to <code>1</code> is a recommended range to supply. <p></p>"},{"location":"reference.html#swizzle","title":"Swizzle","text":"<p>Copy the data from one channel to another. Multiple channels may be copied in one shot allowing channel swizzling.</p> Argument Description <code>red</code> The component to copy the red channel to. <code>green</code> The component to copy the green channel to. <code>blue</code> The component to copy the blue channel to. <code>alpha</code> The component to copy the alpha channel to. <p></p>"},{"location":"reference.html#sepia","title":"Sepia","text":"<p>Apply sepia toning to the image. This filter takes no arguments.</p> <p></p>"},{"location":"reference.html#contrast","title":"Contrast","text":"<p>Adjust the contrast of an image.</p> Argument Description <code>contrast</code> The contrast adjustment to apply. <code>1.0</code> specifies no adjustment. <code>0.0</code> to <code>4.0</code> is a recommended range. <p></p>"},{"location":"reference.html#saturation","title":"Saturation","text":"<p>Increase or decrease the saturation of an image.</p> Argument Description <code>saturation</code> The saturation adjustment to apply. <code>0.0</code> specifies no adjustment. <code>-1.0</code> to <code>1.0</code> is a recommended range. <p></p>"},{"location":"reference.html#vibrance","title":"Vibrance","text":"<p>Adjust the vibrance of the image.</p> Argument Description <code>vibrance</code> The saturation adjustment to apply. <code>0.0</code> specifies no adjustment. <code>-2.0</code> to <code>2.0</code> is a recommended range. <p></p>"},{"location":"reference.html#hue","title":"Hue","text":"<p>Apply an angle adjustment to the hue of an image.</p> Argument Description <code>hue</code> The angle of adjustment of the hue of the image. <p></p>"},{"location":"reference.html#opacity","title":"Opacity","text":"<p>Set the opacity of an image.</p> Argument Description <code>opacity</code> The new opacity of the image. The values must be between <code>0.0</code> and <code>1.0</code>. <p></p>"},{"location":"reference.html#luminance-threshold","title":"Luminance Threshold","text":"<p>Given a specific luminance value, set values of pixels less than that value to opaque black, and the others to opaque white.</p> Argument Description <code>luminance</code> The luminance threshold. The values must be between <code>0.0</code> and <code>1.0</code>. <p></p>"},{"location":"reference.html#image-filters","title":"Image Filters","text":"<p>Image filters apply adjustment to groups of pixels.</p>"},{"location":"reference.html#box-blur","title":"Box Blur","text":"<p>Applies a filter that averages the pixel values around each pixel. The \"radius\" is the half-width of the box enclosing the pixel being sampled. The width and height of the box equals <code>2 * radius + 1</code>. So increasing the size of the radius quickly increasing the number of pixels being sampled and things get expensive fast!</p> <p>Box blurs are not in-place filters. The source and destination textures must be different.</p> <p>An edge of <code>radius</code> pixels remains undefined in the destination image.</p> Argument Description <code>src</code> The source texture to sample pixels from. The size of the <code>src</code> texture and the destination texture must match exactly. <code>radius</code> The half-width of the box surrounding the pixel. <p></p>"},{"location":"reference.html#gaussian-blur","title":"Gaussian Blur","text":"<p>Applies a Gaussian blur on the pixel values sampled from a box surrounding each pixel. The \"radius\" is the half-width of the box enclosing the pixel being sampled. The width and height of the box equals <code>2 * radius + 1</code>. So increasing the size of the radius quickly increasing the number of pixels being sampled and things get expensive fast!</p> <p>Gaussian blurs are not in-place filters. The source and destination textures must be different.</p> <p>An edge of <code>radius</code> pixels remains undefined in the destination image.</p> Argument Description <code>src</code> The source texture to sample pixels from. The size of the <code>src</code> texture and the destination texture must match exactly. <code>radius</code> The half-width of the box surrounding the pixel. <code>sigma</code> The standard deviation of the Gaussian function. <p></p>"},{"location":"reference.html#sobel-filter","title":"Sobel Filter","text":"<p>Finds the edges in an image as determined using the Sobel operator. This filter runs two 3x3 convolution filters on a single image channel.</p> <p>Sobel filters run on grayscale images. For this reason, it is possible to select a specific channel in the source image to use as the grayscale component. The target of the Sobel operation can also be directed to a specific channel.</p> <p>Sobel filters are not in-place filters. The source and destination channels must be different. Unlike convolution kernels that operate on multiple components, it is possible to apply the filter to one channel of an image and store the results into another channel of the same image.</p> <p>Since these filters operate on a single channel, it is usually necessary to duplicate destination channel across the remaining components to get a true grayscale image. Since the source channel is grayscale, it is also usually necessary to apply the grayscale filter to the source image.</p> Argument Description <code>src</code> The source texture to sample pixels from. The size of the <code>src</code> texture and the destination texture must match exactly. <code>src_component</code> The component in the source texture to use as the grayscale component. <code>dst_component</code> The component in the destination texture to direct the result of the Sobel operation to. <p></p>"},{"location":"reference.html#transitions","title":"Transitions","text":"<p>Transitions interpolate between two images of the same size.</p>"},{"location":"reference.html#fade-transition","title":"Fade Transition","text":"<p>Linearly interpolates pixel values between images of the same size.</p> Argument Description <code>from</code> The first texture to sample pixels from. The size of the <code>from</code> texture, the <code>to</code> texture and the destination texture must match exactly. <code>to</code> The second texture to sample pixels from. The size of the <code>from</code> texture, the <code>to</code> texture and the destination texture must match exactly. <code>t</code> The value from <code>0.0f</code> to <code>1.0f</code> to use as the amount of the transition that has been completed. <p></p>"},{"location":"reference.html#swipe-transition","title":"Swipe Transition","text":"<p>Show pixels from one image or the other based on how much the transition has completed.</p> Argument Description <code>from</code> The first texture to sample pixels from. The size of the <code>from</code> texture, the <code>to</code> texture and the destination texture must match exactly. <code>to</code> The second texture to sample pixels from. The size of the <code>from</code> texture, the <code>to</code> texture and the destination texture must match exactly. <code>t</code> The value from <code>0.0f</code> to <code>1.0f</code> to use as the amount of the transition that has been completed. <p></p>"},{"location":"reference.html#queries","title":"Queries","text":"<p>Query image properties.</p>"},{"location":"reference.html#average-color","title":"Average Color","text":"<p>Get a color where each component is the average of all the pixels in the image. This query takes no arguments.</p> <p></p>"},{"location":"reference.html#average-luminance","title":"Average Luminance","text":"<p>Gets the average luminance of all the pixels in the image. This query takes no arguments.</p>"},{"location":"reference.html#is-opaque","title":"Is Opaque","text":"<p>Gets if the image is completely opaque.</p>"}]}